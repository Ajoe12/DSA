1. Create graph
	a. Adjacency Matrix : Time (V x V), Space(V x V)
	b. Adjacency List: Time->Avg(V + E) & Worst(V X V)

2. BFS graph
	breadth first search
	implemented by queue and a visted vector
	time & Space:- O(|V|)

3. DFS graph
	depth first search
	loop termination condition: 
		1. node is a leaf node
		2. node is already visited


# Difference between DFS and BFS

DFS						BFS

1. depth				wide
2. Pre,Post,Inorder		Level Order
3. Far					Near
4. Stack				queue
5. Backtracking			Shortest distance



4. detect cycle in directed graph (dfs)
	-> for directed graph we will take Order vector with visited vector to check the path. 

5. detect cycle in uniderected graph (dfs)
	-> for uniderected graph we have to store the parent of every node in recursion 
	-> 1-2 if parent not sent then this edge is considered a cycle.
